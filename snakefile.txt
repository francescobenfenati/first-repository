import os
numbers = ["00"]
for i in range(1,5):
    numbers.append("{:02d}".format(i))
import hashlib
def md5(fname):
            """hash function appropriate for big data"""
            hash_md5 = hashlib.md5()
            with open(fname, "rb") as f:
                for chunk in iter(lambda: f.read(4096), b""):
                    hash_md5.update(chunk)
            return hash_md5.hexdigest()

rule all:
    input:
        expand("transazioni_{number}.tsv", number=numbers)
    output:
        "result.tsv"
    run:
        for filename in input:
            with open("result.tsv",'a') as of:
                of.write(filename)    
                of.write("\t")       
                of.write(md5(filename))
                of.write('\n')

rule import_files:
    output:
        out = "transazioni_{number}.tsv"
    
    run:
        import requests
        url_base = ("https://raw.githubusercontent.com/UniboDIFABiophysics"+
                    "/programmingCourseDIFA/master/snakemake_exercise/")
        filename = output.out

        response = requests.get(url_base+filename)

        # Throw an error for bad status codes
        response.raise_for_status()

        with open(filename, 'wb') as handle:
            handle.write(response.content)

rule confront_hashes:
    input:
        "result.tsv",
        "md5sums.tsv"
    run:
        try:
            a = md5("result.tsv")
            b = md5("md5sums.tsv")
            if a != b:
                raise Exception("Hashes don't match")
        except Exception:
                print("Hashes don't match")
                               
rule sum_transactions:
    input:
        expand("transazioni_{number}.tsv",number=numbers)
    output:
        "transazioni_corrette.tsv"

    script:
        "/Users/francescobenfenati/.spyder-py3/snakemake_lesson/sums_transactions.py"
           
rule sum_all:
    input:
        "transazioni_corrette.tsv"
    output:
        "finale.tsv"
    script :
        "/Users/francescobenfenati/.spyder-py3/snakemake_lesson/sum_all.py"
rule import_hashes:
    output:
       out = "md5sums.tsv"
    run:
        import requests
        url_base = ("https://raw.githubusercontent.com/UniboDIFABiophysics"+
                    "/programmingCourseDIFA/master/snakemake_exercise/")
        filename = output.out
        response = requests.get(url_base+filename)

        # Throw an error for bad status codes
        response.raise_for_status()

        with open(filename, 'wb') as handle:
            handle.write(response.content)
            
